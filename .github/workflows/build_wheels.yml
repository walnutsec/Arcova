name: Build Python Wheels

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libjpeg-dev libssl-dev

      - name: Clone vcpkg
        if: runner.os == 'Windows'
        run: git clone https://github.com/microsoft/vcpkg.git

      - name: Bootstrap vcpkg
        if: runner.os == 'Windows'
        run: .\vcpkg\bootstrap-vcpkg.bat
        shell: cmd

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: .\vcpkg\vcpkg.exe install libjpeg-turbo:x64-windows openssl:x64-windows
        shell: cmd

      - name: Set vcpkg environment variables (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "INCLUDE=${{ github.workspace }}\vcpkg\installed\x64-windows\include" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "LIB=${{ github.workspace }}\vcpkg\installed\x64-windows\lib" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: pwsh

      - name: Install Python build tools
        run: python -m pip install --upgrade pip
        
      - name: Build wheel
        run: python -m build --wheel

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./dist
